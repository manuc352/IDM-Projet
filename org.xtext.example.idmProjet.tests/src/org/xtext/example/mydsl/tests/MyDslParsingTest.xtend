/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.tests

import com.google.inject.Inject

import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydsl.myDsl.Json
import org.xtext.example.mydsl.myDsl.JsonOperation

@ExtendWith(InjectionExtension)
@InjectWith(MyDslInjectorProvider)
class MyDslParsingTest {
	@Inject
	ParseHelper<Json> parseHelper
	
	long debut
	int i
	
	@Test
	def void loadModel() {
		debut = System.currentTimeMillis();
		i=1
		while(i<=8){
			val result = parseHelper.parse('''
			{} file json_'''+i+''' = "json_6.json"
			add json_'''+i+''', "bidule":"chose"
			search json_'''+i+''', "city"
			delete json_'''+i+''', "tales": "comfortable"
			''')
			Assertions.assertNotNull(result)
			val errors = result.eResource.errors
			Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		
			val PythonCompiler cmpPython = new PythonCompiler(result)
			cmpPython.compileAndRun
			val JavaCompiler cmpJava = new JavaCompiler(result)
			cmpJava.compileAndRun
			i++
		}
		
		System.out.println(System.currentTimeMillis()-debut);
		
	}
}
