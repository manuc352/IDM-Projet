/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_JNumber_FullStopKeyword_3_q;
	protected AbstractElementAlias match_JNumber_HyphenMinusKeyword_1_q;
	protected AbstractElementAlias match_JNumber_INTTerminalRuleCall_2_q;
	protected AbstractElementAlias match_JNumber_____EKeyword_5_0_0_or_EKeyword_5_0_1___HyphenMinusKeyword_5_1_q_INTTerminalRuleCall_5_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyDslGrammarAccess) access;
		match_JNumber_FullStopKeyword_3_q = new TokenAlias(false, true, grammarAccess.getJNumberAccess().getFullStopKeyword_3());
		match_JNumber_HyphenMinusKeyword_1_q = new TokenAlias(false, true, grammarAccess.getJNumberAccess().getHyphenMinusKeyword_1());
		match_JNumber_INTTerminalRuleCall_2_q = new TokenAlias(false, true, grammarAccess.getJNumberAccess().getINTTerminalRuleCall_2());
		match_JNumber_____EKeyword_5_0_0_or_EKeyword_5_0_1___HyphenMinusKeyword_5_1_q_INTTerminalRuleCall_5_2__q = new GroupAlias(false, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getJNumberAccess().getEKeyword_5_0_0()), new TokenAlias(false, false, grammarAccess.getJNumberAccess().getEKeyword_5_0_1())), new TokenAlias(false, true, grammarAccess.getJNumberAccess().getHyphenMinusKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getJNumberAccess().getINTTerminalRuleCall_5_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getCOLON_SEPARATIONRule())
			return getCOLON_SEPARATIONToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getINTRule())
			return getINTToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getLEFT_BRACERule())
			return getLEFT_BRACEToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getLEFT_BRACKETRule())
			return getLEFT_BRACKETToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getPAIR_SEPARATIONRule())
			return getPAIR_SEPARATIONToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRIGHT_BRACERule())
			return getRIGHT_BRACEToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRIGHT_BRACKETRule())
			return getRIGHT_BRACKETToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal COLON_SEPARATION: ':';
	 */
	protected String getCOLON_SEPARATIONToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":";
	}
	
	/**
	 * terminal INT returns ecore::EInt: ('0'..'9')+;
	 */
	protected String getINTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * terminal LEFT_BRACE : '{';
	 */
	protected String getLEFT_BRACEToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "{";
	}
	
	/**
	 * terminal LEFT_BRACKET: '[';
	 */
	protected String getLEFT_BRACKETToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "[";
	}
	
	/**
	 * terminal PAIR_SEPARATION : ';';
	 */
	protected String getPAIR_SEPARATIONToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ";";
	}
	
	/**
	 * terminal RIGHT_BRACE : '}';
	 */
	protected String getRIGHT_BRACEToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "}";
	}
	
	/**
	 * terminal RIGHT_BRACKET: ']';
	 */
	protected String getRIGHT_BRACKETToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "]";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_JNumber_FullStopKeyword_3_q.equals(syntax))
				emit_JNumber_FullStopKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JNumber_HyphenMinusKeyword_1_q.equals(syntax))
				emit_JNumber_HyphenMinusKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JNumber_INTTerminalRuleCall_2_q.equals(syntax))
				emit_JNumber_INTTerminalRuleCall_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JNumber_____EKeyword_5_0_0_or_EKeyword_5_0_1___HyphenMinusKeyword_5_1_q_INTTerminalRuleCall_5_2__q.equals(syntax))
				emit_JNumber_____EKeyword_5_0_0_or_EKeyword_5_0_1___HyphenMinusKeyword_5_1_q_INTTerminalRuleCall_5_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     '.'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '-'? INT? (ambiguity) INT (('E' | 'e') '-'? INT)? (rule start)
	 */
	protected void emit_JNumber_FullStopKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) INT? '.'? INT (('E' | 'e') '-'? INT)? (rule start)
	 */
	protected void emit_JNumber_HyphenMinusKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     INT?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '-'? (ambiguity) '.'? INT (('E' | 'e') '-'? INT)? (rule start)
	 */
	protected void emit_JNumber_INTTerminalRuleCall_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('E' | 'e') '-'? INT)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '-'? INT? '.'? INT (ambiguity) (rule start)
	 */
	protected void emit_JNumber_____EKeyword_5_0_0_or_EKeyword_5_0_1___HyphenMinusKeyword_5_1_q_INTTerminalRuleCall_5_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
